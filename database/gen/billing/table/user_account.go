//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var UserAccount = newUserAccountTable("billing", "user_account", "")

type userAccountTable struct {
	mysql.Table

	// Columns
	Userid    mysql.ColumnInteger
	Firstname mysql.ColumnString
	Lastname  mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type UserAccountTable struct {
	userAccountTable

	NEW userAccountTable
}

// AS creates new UserAccountTable with assigned alias
func (a UserAccountTable) AS(alias string) *UserAccountTable {
	return newUserAccountTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UserAccountTable with assigned schema name
func (a UserAccountTable) FromSchema(schemaName string) *UserAccountTable {
	return newUserAccountTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UserAccountTable with assigned table prefix
func (a UserAccountTable) WithPrefix(prefix string) *UserAccountTable {
	return newUserAccountTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UserAccountTable with assigned table suffix
func (a UserAccountTable) WithSuffix(suffix string) *UserAccountTable {
	return newUserAccountTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUserAccountTable(schemaName, tableName, alias string) *UserAccountTable {
	return &UserAccountTable{
		userAccountTable: newUserAccountTableImpl(schemaName, tableName, alias),
		NEW:              newUserAccountTableImpl("", "new", ""),
	}
}

func newUserAccountTableImpl(schemaName, tableName, alias string) userAccountTable {
	var (
		UseridColumn    = mysql.IntegerColumn("userid")
		FirstnameColumn = mysql.StringColumn("firstname")
		LastnameColumn  = mysql.StringColumn("lastname")
		allColumns      = mysql.ColumnList{UseridColumn, FirstnameColumn, LastnameColumn}
		mutableColumns  = mysql.ColumnList{FirstnameColumn, LastnameColumn}
	)

	return userAccountTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Userid:    UseridColumn,
		Firstname: FirstnameColumn,
		Lastname:  LastnameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
